!!com.aptana.scripting.model.BundleElement
author: Christopher Williams et al
children:
- !!com.aptana.scripting.model.MenuElement
  children:
  - children: &id001 []
    commandName: Run
    customProperties: null
    displayName: Run
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Focused Unit Test
    customProperties: null
    displayName: Run Focused Unit Test
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Tests in Current File
    customProperties: null
    displayName: Run Tests in Current File
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Run Rake Task
    customProperties: null
    displayName: Run Rake Task
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Documentation for Word
    customProperties: null
    displayName: Documentation for Word
    path: bundle.rb
    scope: null
  - children:
    - children: *id001
      commandName: Show for Current File / Project
      customProperties: null
      displayName: Show for Current File / Project
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: '-'
      customProperties: null
      displayName: '-'
      path: bundle.rb
      scope: null
    - children:
      - children: *id001
        commandName: Bold
        customProperties: null
        displayName: Bold
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: Italic
        customProperties: null
        displayName: Italic
        path: bundle.rb
        scope: null
      - children: *id001
        commandName: Typewriter
        customProperties: null
        displayName: Typewriter
        path: bundle.rb
        scope: null
      commandName: Format
      customProperties: null
      displayName: Format
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: '-'
      customProperties: null
      displayName: '-'
      path: bundle.rb
      scope: null
    - children: *id001
      commandName: Omit
      customProperties: null
      displayName: Omit
      path: bundle.rb
      scope: null
    commandName: RDoc
    customProperties: null
    displayName: RDoc
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Open require
    customProperties: null
    displayName: Open require
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Validate Syntax
    customProperties: null
    displayName: Validate Syntax
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Validate Syntax (ERB)
    customProperties: null
    displayName: Validate Syntax (ERB)
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Execute Line / Selection as Ruby
    customProperties: null
    displayName: Execute Line / Selection as Ruby
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Execute and Update '# =>' Markers
    customProperties: null
    displayName: Execute and Update '# =>' Markers
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Insert Missing requires
    customProperties: null
    displayName: Insert Missing requires
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Add ! to Method in Line
    customProperties: null
    displayName: Add ! to Method in Line
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Toggle String / Symbol
    customProperties: null
    displayName: Toggle String / Symbol
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Insert ERb's <% .. %> or <%= ..  %>
    customProperties: null
    displayName: Insert ERb's <% .. %> or <%= ..  %>
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: '-'
    customProperties: null
    displayName: '-'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: New Method
    customProperties: null
    displayName: New Method
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Toggle 'do ... end' / '{ ... }'
    customProperties: null
    displayName: Toggle 'do ... end' / '{ ... }'
    path: bundle.rb
    scope: null
  - children: *id001
    commandName: Hash Pointer - =>
    customProperties: null
    displayName: Hash Pointer - =>
    path: bundle.rb
    scope: null
  commandName: Ruby
  customProperties: null
  displayName: Ruby
  path: bundle.rb
  scope: source.ruby, project.rails
- !!com.aptana.scripting.model.SmartTypingPairsElement
  customProperties: null
  displayName: smart_typing_pairs-06a11b6d-bd41-44e8-9320-92d00683bb95
  pairs: ['"', '"', '|', '|', (, ), '{', '}', '[', ']', '''', '''', '`', '`']
  path: bundle.rb
  scope: source.ruby
- !!com.aptana.scripting.model.EnvironmentElement {customProperties: null, displayName: environment-0ff8e64e-62c5-4320-b3b1-36f7ded7fb81,
  path: bundle.rb, scope: source.ruby}
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [bm]
  displayName: Benchmark.bmbm do .. end
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/benchmark.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Validate Syntax (ERB)
  input: [document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+SHIFT+V]
  outputPath: null
  outputType: show_as_tooltip
  path: commands/check_erb_syntax.rb
  runType: current_thread
  scope: text.html.ruby, text.html source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Validate Syntax
  input: [document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+SHIFT+V]
  outputPath: null
  outputType: show_as_tooltip
  path: commands/check_ruby_syntax.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class .. < DelegateClass .. initialize .. end
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/delegate_class.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Documentation for Word
  input: [selection, word]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: show_as_tooltip
  path: commands/documentation_for_word.rb
  runType: current_thread
  scope: source.ruby, source.ruby.rails
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [eac]
  displayName: each_char { |chr| .. }
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/each_char.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [eac]
  displayName: each_cons(..) { |group| .. }
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/each_cons.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [eas]
  displayName: each_slice(..) { |group| .. }
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/each_slice.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Bold
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+SHIFT+B]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/enclose_in_asterisks_comments.rb
  runType: current_thread
  scope: source.ruby comment
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Typewriter
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+SHIFT+K]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/enclose_in_plus_comments.rb
  runType: current_thread
  scope: source.ruby comment
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Italic
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+SHIFT+I]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/enclose_in_underscores_comments.rb
  runType: current_thread
  scope: source.ruby comment
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Execute and Update '# =>' Markers
  input: [selection, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [COMMAND+CONTROL+SHIFT+E]
  outputPath: null
  outputType: replace_selection
  path: commands/execute_and_insert_results.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Execute Line / Selection as Ruby
  input: [selection, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [SHIFT+CONTROL+E]
  outputPath: null
  outputType: insert_as_text
  path: commands/execute_line_with_ruby.rb
  runType: current_thread
  scope: null
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [Forw]
  displayName: Extend Forwardable (Forw)
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/extend_forwardable.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Go to Definition
  input: [document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [F3]
  outputPath: null
  outputType: discard
  path: commands/go_to_definition.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Hash Pointer - =>
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [ALT+L]
    !!com.aptana.scripting.model.Platform 'MAC': [CONTROL+L]
  outputPath: null
  outputType: insert_as_text
  path: commands/hash_pointer.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Insert ERb's <% .. %> or <%= ..  %>
  input: [selection]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+SHIFT+.]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/insert_erb_tags.rb
  runType: current_thread
  scope: text.html.ruby - source, text.xml.ruby - source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Insert Missing requires
  input: [selection, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+M2+3]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/insert_missing_requires.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Add ! to Method in Line
  input: [selection, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CTRL+M2+1]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/make_destructive_call.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [mapwi]
  displayName: map_with_index { |e, i| .. }
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/map_with_index.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: New Method
  input: [selection, word]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [SHIFT+RETURN]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/new_method.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Omit
  input: [selection, line]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [COMMAND+SHIFT+CONTROL+O]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/omit_from_rdoc.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Open require
  input: [selection, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [SHIFT+M1+D]
  outputPath: null
  outputType: show_as_tooltip
  path: commands/open_require.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [Pn]
  displayName: PStore.new( .. )
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/pstore_new.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [reqg]
  displayName: require_gem ".."
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/require_gem.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+R]
  outputPath: null
  outputType: discard
  path: commands/run.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Tests in Current File
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+M2+T]
  outputPath: null
  outputType: discard
  path: commands/run_focused_file.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Focused Unit Test
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [M1+M2+R]
  outputPath: null
  outputType: discard
  path: commands/run_focused_unit_test.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Run Rake Task
  input: [none]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+M2+R]
  outputPath: null
  outputType: discard
  path: commands/run_rake_task.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Show for Current File / Project
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: show_as_html
  path: commands/show_rdoc_for_this_file.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Toggle 'do ... end' / '{ ... }'
  input: [selection, document]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': ['CONTROL+M2+[']
  outputPath: null
  outputType: insert_as_snippet
  path: commands/toggle_block.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Toggle ERb Tags
  input: [selection, undefined]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CTRL+M2+.]
  outputPath: null
  outputType: insert_as_snippet
  path: commands/toggle_erb_tags.rb
  runType: current_thread
  scope: source.ruby.embedded, source.ruby.rails.embedded, comment.block.erb, meta.erb
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Toggle Quote Style
  input: [selection, undefined]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CONTROL+M2+']
  outputPath: null
  outputType: replace_selection
  path: commands/toggle_quote_style.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Toggle String / Symbol
  input: [selection, undefined]
  inputPath: null
  keyBindingMap:
    !!com.aptana.scripting.model.Platform 'ALL': [CTRL+M2+;]
  outputPath: null
  outputType: replace_selection
  path: commands/toggle_string_symbol.rb
  runType: current_thread
  scope: source.ruby string.quoted, source.ruby constant.other.symbol.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties: null
  displayName: Validate
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: show_as_tooltip
  path: commands/validate.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [worw]
  displayName: word_wrap()
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_text
  path: commands/word_wrap.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [xml]
  displayName: xmlread(..)
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/xmlread.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [Yd]
  displayName: YAML.dump(.., file)
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/yaml_dump.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [Yl]
  displayName: YAML.load(file)
  input: [document]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: commands/yaml_load.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [rb]
  displayName: '#!/usr/bin/env ruby -wKU'
  expansion: '#!/usr/bin/env ruby -wKU

    '
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [y]
  displayName: ':yields:'
  expansion: ' :yields: ${1:arguments}'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ife]
  displayName: if ... else ... end
  expansion: "if ${1:condition}\n\t$2\nelse\n\t$3\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [if]
  displayName: if ... end
  expansion: "if ${1:condition}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [case]
  displayName: case ... end
  expansion: "case ${1:object}\nwhen ${2:condition}\n\t$0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [end]
  displayName: __END__
  expansion: '__END__

    '
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: ['#']
  displayName: Add '# =>' Marker
  expansion: '# => '
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [am]
  displayName: alias_method ..
  expansion: alias_method :${1:new_name}, :${2:old_name}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [all]
  displayName: all? { |e| .. }
  expansion: all? { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [any]
  displayName: any? { |e| .. }
  expansion: any? { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [app]
  displayName: application { .. }
  expansion: "if __FILE__ == \\$PROGRAM_NAME\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Array]
  displayName: Array.new(10) { |i| .. }
  expansion: Array.new(${1:10}) { |${2:i}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [asnr]
  displayName: assert_nothing_raised(..) { .. }
  expansion: assert_nothing_raised(${1:Exception}) { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [asnt]
  displayName: assert_nothing_thrown { .. }
  expansion: assert_nothing_thrown { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [asr]
  displayName: assert_raise(..) { .. }
  expansion: assert_raise(${1:Exception}) { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ast]
  displayName: assert_throws(..) { .. }
  expansion: assert_throws(:${1:expected}) { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [rw]
  displayName: attr_accessor ..
  expansion: attr_accessor :${1:attr_names}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [r]
  displayName: attr_reader ..
  expansion: attr_reader :${1:attr_names}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [w]
  displayName: attr_writer ..
  expansion: attr_writer :${1:attr_names}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [tc]
  displayName: class .. < Test::Unit::TestCase .. end
  expansion: "require \"test/unit\"\n      \nrequire \"${1:library_file_name}\"\n\n\
    class Test${2:ClassName} < Test::Unit::TestCase\n  def test_${3:case_name}\n \
    \   $0\n\tend\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class BlankSlate .. initialize .. end
  expansion: "class ${1:BlankSlate}\n  instance_methods.each { |meth| undef_method(meth)\
    \ unless meth =~ /\\A__/ }\n  \t\n  def initialize(${2:args})\n    @${3:delegate}\
    \ = ${4:delegate_object}\n\n    $0\n  end\n\n  def method_missing(meth, *args,\
    \ &block)\n    @${3:delegate}.send(meth, *args, &block)\n  end\n  \t  \t\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class << self .. end
  expansion: "class << ${1:self}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [clafn]
  displayName: class_from_name()
  expansion: split("::").inject(Object) { |par, const| par.const_get(const) }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [cl]
  displayName: classify { |e| .. }
  expansion: classify { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [col]
  displayName: collect { |e| .. }
  expansion: collect { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [deec]
  displayName: deep_copy(..)
  expansion: Marshal.load(Marshal.dump(${1:obj_to_copy}))
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [def]
  displayName: def ... end
  expansion: "def ${1:method_name}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [defmm]
  displayName: def method_missing .. end
  expansion: "def method_missing(meth, *args, &blk)\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [defs]
  displayName: def self .. end
  expansion: "def self.${1:class_method_name}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [deft]
  displayName: def test_ .. end
  expansion: "def test_${1:case_name}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [defd]
  displayName: def_delegator ..
  expansion: def_delegator :${1:@del_obj}, :${2:del_meth}, :${3:new_name}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [defds]
  displayName: def_delegators ..
  expansion: def_delegators :${1:@del_obj}, :${2:del_methods}
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [deli]
  displayName: delete_if { |e| .. }
  expansion: delete_if { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [det]
  displayName: detect { |e| .. }
  expansion: detect { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Dir]
  displayName: Dir.glob("..") { |file| .. }
  expansion: Dir.glob("${1:*}") { |${2:file}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Dir]
  displayName: Dir[".."]
  expansion: Dir["${1:*.rb}"]
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [dir]
  displayName: directory()
  expansion: File.dirname(__FILE__)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [do]
  displayName: Insert do |variable| ... end
  expansion: "do |${1:variable}|\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [dow]
  displayName: downto(0) { |n| .. }
  expansion: downto(${1:0}) { |${2:n}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ea]
  displayName: each { |e| .. }
  expansion: each { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eab]
  displayName: each_byte { |byte| .. }
  expansion: each_byte { |${1:byte}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eai]
  displayName: each_index { |i| .. }
  expansion: each_index { |${1:i}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eak]
  displayName: each_key { |key| .. }
  expansion: each_key { |${1:key}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eal]
  displayName: each_line { |line| .. }
  expansion: each_line$1 { |${2:line}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eap]
  displayName: each_pair { |name, val| .. }
  expansion: each_pair { |${1:name}, ${2:val}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eas-]
  displayName: each_slice(..) { |group| .. }
  expansion: each_slice(${1:2}) { |${2:group}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eav]
  displayName: each_value { |val| .. }
  expansion: each_value { |${1:val}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [eawi]
  displayName: each_with_index { |e, i| .. }
  expansion: each_with_index { |${1:e}, ${2:i}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [elsif]
  displayName: elsif ...
  expansion: "elsif ${1:condition}\n  $0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fet]
  displayName: fetch(name) { |key| .. }
  expansion: fetch(${1:name}) { |${2:key}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [File]
  displayName: File.foreach ("..") { |line| .. }
  expansion: File.foreach("${1:path_to_file}") { |${3:line}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [File]
  displayName: File.open("..") { |file| .. }
  expansion: File.open("${1:path_to_file}", "${2:r/r+/w/w+/a/a+/b}") { |${3:file}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [File]
  displayName: File.read("..")
  expansion: File.read("${1:path_to_file}")
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fil]
  displayName: fill(range) { |i| .. }
  expansion: fill(${1:range}) { |${2:i}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fin]
  displayName: find { |e| .. }
  expansion: find { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [fina]
  displayName: find_all { |e| .. }
  expansion: find_all { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [flao]
  displayName: flatten_once()
  expansion: inject(Array.new) { |${1:arr}, ${2:a}| ${1:arr}.push(*${2:a}) }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [gre]
  displayName: grep(/pattern/) { |match| .. }
  expansion: grep(/${1:pattern}/) { |${2:match}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [gsu]
  displayName: gsub(/../) { |match| .. }
  expansion: gsub(/${1:pattern}/) { |${2:match}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [':']
  displayName: Hash Pair - :key => "value"
  expansion: :${1:key} => ${2:"value"}${3:, }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Hash]
  displayName: Hash.new { |hash, key| hash[key] = .. }
  expansion: Hash.new { |${1:hash}, ${2:key}| ${1:hash}[${2:key}] = $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Comp]
  displayName: include Comparable ..
  expansion: "include Comparable\n\ndef <=>(other)\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Enum]
  displayName: include Enumerable ..
  expansion: "include Enumerable\n\ndef each(&block)\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [inj]
  displayName: inject(init) { |mem, var| .. }
  expansion: inject(${1:init}) { |${2:mem}, ${3:var}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [lam]
  displayName: lambda { |args| .. }
  expansion: lambda { |${1:args}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [loo]
  displayName: loop { .. }
  expansion: loop { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [map]
  displayName: map { |e| .. }
  expansion: map { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Md]
  displayName: Marshal.dump(.., file)
  expansion: File.open("${1:path_to_file}.dump", "wb") { |${2:file}| Marshal.dump(${3:obj}, ${2:file}) }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [Ml]
  displayName: Marshal.load(obj)
  expansion: File.open("${1:path_to_file}.dump", "rb") { |${2:file}| Marshal.load(${2:file}) }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [max]
  displayName: max { |a, b| .. }
  expansion: max { |a, b| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [min]
  displayName: min { |a, b| .. }
  expansion: min { |a, b| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: ['{']
  displayName: Insert { |variable| ... }
  expansion: '{ |${1:variable}| ${0} }'
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ope]
  displayName: open("path_or_url", "w") { |io| .. }
  expansion: open("${1:path_or_url_or_pipe}", "${2:r/r+/w/w+/a/a+/b}") { |${3:io}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [optp]
  displayName: option_parse { .. }
  expansion: "require \"optparse\"\n\noptions = {${1::default => \"args\"}}\n\nARGV.options\
    \ do |opts|\n  opts.banner = \"Usage:  #{File.basename(\\$PROGRAM_NAME)} [OPTIONS]\
    \ ${2:OTHER_ARGS}\"\n\t\n  opts.separator \"\"\n  opts.separator \"Specific Options:\"\
    \n\t\n  $0\n\t\n  opts.separator \"Common Options:\"\n\t\n  opts.on( \"-h\", \"\
    --help\",\n  \t \"Show this message.\" ) do\n    puts opts\n    exit\n  end\n\t\
    \n  begin\n    opts.parse!\n  rescue\n    puts opts\n    exit\n  end\nend\n"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [par]
  displayName: partition { |e| .. }
  expansion: partition { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [patfh]
  displayName: path_from_here( .. )
  expansion: File.join(File.dirname(__FILE__), *%w[${1:rel path here}])
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ran]
  displayName: randomize()
  expansion: sort_by { rand }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [rej]
  displayName: reject { |e| .. }
  expansion: reject { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [req]
  displayName: require ".."
  expansion: require "$0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ts]
  displayName: require "tc_.." ..
  expansion: 'require "test/unit"


    require "tc_${1:test_case_file}"

    require "tc_${2:test_case_file}"

    '
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [rep]
  displayName: results.report(..) { .. }
  expansion: results.report("${1:name}:") { TESTS.times { $0 } }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [reve]
  displayName: reverse_each { |e| .. }
  expansion: reverse_each { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sca]
  displayName: scan(/../) { |match| .. }
  expansion: scan(/${1:pattern}/) { |${2:match}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sel]
  displayName: select { |e| .. }
  expansion: select { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sinc]
  displayName: singleton_class()
  expansion: class << self; self end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sor]
  displayName: sort { |a, b| .. }
  expansion: sort { |a, b| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sorb]
  displayName: sort_by { |e| .. }
  expansion: sort_by { |${1:e}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [ste]
  displayName: step(2) { |e| .. }
  expansion: step(${1:2}) { |${2:n}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [sub]
  displayName: sub(/../) { |match| .. }
  expansion: sub(/${1:pattern}/) { |${2:match}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [tas]
  displayName: task :task_name => [:dependent, :tasks] do .. end
  expansion: "desc \"${1:Task description}\"\ntask :${2:task_name} => ${3:[:dependent,\
    \ :tasks]} do\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [tim]
  displayName: times { |n| .. }
  expansion: times { |${1:n}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [tra]
  displayName: transaction( .. ) { .. }
  expansion: transaction(${1:true}) { $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [unif]
  displayName: unix_filter { .. }
  expansion: "ARGF.each_line$1 do |${2:line}|\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [unless]
  displayName: unless ... end
  expansion: "unless ${1:condition}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [until]
  displayName: until ... end
  expansion: "until ${1:condition}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [opt]
  displayName: option(..)
  expansion: "opts.on( \"-${1:o}\", \"--${2:long-option-name}\", ${3:String},\n  \
    \   \"${4:Option description.}\" ) do |${6:opt}|\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [upt]
  displayName: upto(1.0/0.0) { |n| .. }
  expansion: upto(${1:1.0/0.0}) { |${2:n}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [usai]
  displayName: usage_if()
  expansion: "if ARGV.$1\n  abort \"Usage:  #{\\$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"\
    \nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [usau]
  displayName: usage_unless()
  expansion: "unless ARGV.$1\n  abort \"Usage:  #{\\$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"\
    \nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [when]
  displayName: when ...
  expansion: "when ${1:condition}\n  $0"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [while]
  displayName: while ... end
  expansion: "while ${1:condition}\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [xpa]
  displayName: xpath(..) { .. }
  expansion: "elements.each(\"${1:XPath}\") do |${2:node}|\n  $0\nend"
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.SnippetElement
  async: false
  customProperties:
    prefix_values: [zip]
  displayName: zip(enums) { |row| .. }
  expansion: zip(${1:enums}) { |${2:row}| $0 }
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class .. < ParentClass .. initialize .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: ClassName = Struct .. do .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [cla]
  displayName: class .. initialize .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [mod]
  displayName: module .. ClassMethods .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [mod]
  displayName: module .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [mod]
  displayName: module .. module_function .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [nam]
  displayName: namespace :.. do .. end
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [begin]
  displayName: begin ... rescue ... end
  input: [selection]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [as]
  displayName: assert(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [ase]
  displayName: assert_equal(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asid]
  displayName: assert_in_delta(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asio]
  displayName: assert_instance_of(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asko]
  displayName: assert_kind_of(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asm]
  displayName: assert_match(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asn]
  displayName: assert_nil(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asnm]
  displayName: assert_no_match(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asne]
  displayName: assert_not_equal(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asnn]
  displayName: assert_not_nil(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asns]
  displayName: assert_not_same(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [asrt]
  displayName: assert_respond_to(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [ass]
  displayName: assert_same(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [ass]
  displayName: assert_send(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [aso]
  displayName: assert_operator(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [fl]
  displayName: flunk(..)
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
- !!com.aptana.scripting.model.CommandElement
  async: false
  customProperties:
    prefix_values: [=b]
  displayName: New Block
  input: [none]
  inputPath: null
  keyBindingMap: null
  outputPath: null
  outputType: insert_as_snippet
  path: snippets/snippets.rb
  runType: current_thread
  scope: source.ruby
  workingDirectoryType: UNDEFINED
copyright: '(C) Copyright 2010 Aptana Inc. Distributed under the MIT license.


  Portions (C) Copyright 2006 James Edward Gray II, distributed under the terms of
  the MIT License.

  '
customProperties: null
decreaseIndentMarkers: {!scope 'source.ruby': !regexp '(?-mix:^\s*([}\]]\s*$|(end|rescue|ensure|else|elsif|when)\b))'}
description: "Support for the Ruby programming language (http://www.ruby-lang.org),\n\
  converted from TextMate to Ruble by Aptana.\n\nSpecial thanks to our contributors:\n\
  \n  Kenny Ortmann (http://github.com/yairgo)\n"
displayName: Ruby
fileTypeRegistry: {}
fileTypes: *id001
foldingStartMarkers: {!scope 'source.ruby': !regexp '(?-mix:(\s*+(module|class|def(?!.*\bend\s*$)|unless|if|case|begin|for|while|until|^=begin|("(\\.|[^"])*+"|''(\\.|[^''])*+''|[^#"''])*(\s(do|begin|case)|(?<!\$)[-+=&|*\/~%^<>~]\s*+(if|unless)))\b(?![^;]*+;.*?\bend\b)|("(\\.|[^"])*+"|''(\\.|[^''])*+''|[^#"''])*(\{(?![^}]*+\})|\[(?![^\]]*+\]))).*$|[#].*?\(fold\)\s*+$)'}
foldingStopMarkers: {!scope 'source.ruby': !regexp '(?-mix:((^|;)\s*+end\s*+([#].*)?$|(^|;)\s*+end\..*$|^\s*+[}\]],?\s*+([#].*)?$|[#].*?\(end\)\s*+$|^=end))'}
increaseIndentMarkers: {!scope 'source.ruby': !regexp '(?x-mi:^(\s*(module|class|def|unless|if|else|elsif|case|when|begin|rescue|ensure|for|while|until|(?=.*?\b(do|begin|case|if|unless)\b)("(\\.|[^\\"])*+"|''(\\.|[^\\''])*+''|[^#"''])*(\s(do|begin|case)|[-+=&|*\/~%^<>~](?<!\$.)
    \s*+ (if|unless)))\b(?![^;]*+;.*?\bend\b)|("(\\.|[^\\"])*+"|''(\\.|[^\\''])*+''|[^#"''])*(\{(?![^}]*+\})|\[(?![^\]]*+\]))).*$)'}
license: null
licenseUrl: null
path: bundle.rb
repository: git://github.com/aptana/ruby.ruble.git
visible: true
